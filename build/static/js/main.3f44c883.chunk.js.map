{"version":3,"sources":["Login.js","Aftersignin.js","fire.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","email","setEmail","password","setPassword","handleLogin","handleSignup","hasAccount","setHasAccount","emailError","passwordError","className","type","autoFocus","required","value","onChange","e","target","onClick","Aftersignin","handleLogout","fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","App","useState","user","setUser","setEmailError","setPasswordError","clearErrors","authListener","auth","onAuthStateChanged","useEffect","signOut","signInWithEmailAndPassword","catch","err","code","message","createUserWithEmailAndPassword","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f44c883.chunk.js","sourcesContent":["import React from 'react';\n\nconst Login = (props) =>{\n\n\tconst {email, \n\t\t   setEmail, \n\t\t   password, \n\t\t   setPassword, \n\t\t   handleLogin, \n\t\t   handleSignup, \n\t\t   hasAccount, \n\t\t   setHasAccount, \n\t\t   emailError, \n\t\t   passwordError\n\t\t} = props;\n\n\treturn(\n\t\t<section className = \"login\">\n\t\t\t<div className = \"loginContainer\">\n\t\t\t\t<label>Email</label>\n\t\t\t\t<input type = \"text\" autoFocus required \n\t\t\t\tvalue = {email} \n\t\t\t\tonChange = {e => setEmail(e.target.value)} \n\t\t\t\t/>\n\t\t\t\t<p className = \"errorMsg\">{emailError}</p>\n\t\t\t\t<label>Password</label>\n\t\t\t\t<input type = \"password\" required \n\t\t\t\tvalue = {password} \n\t\t\t\tonChange = {e => setPassword(e.target.value)} \n\t\t\t\t/>\n\t\t\t\t<p className = \"errorMsg\">{passwordError}</p>\n\t\t\t\t<div className=\"btnContainer\">\n\t\t\t\t\t{hasAccount ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<button onClick = {handleLogin}>Sign in</button>\n\t\t\t\t\t\t\t<p>Don't have an account ? <span onClick = {() => setHasAccount(!hasAccount)}>Sign Up</span></p>\n\t\t\t\t\t\t</>\n\t\t\t\t\t ):(\n\t\t\t\t\t \t<>\n\t\t\t\t\t\t\t<button onClick = {handleSignup}>Sign up</button>\n\t\t\t\t\t\t\t<p>Already have an account ? <span onClick = {() => setHasAccount(!hasAccount)}>Sign in</span></p>\n\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t</section>\n\t\t);\n}\n\nexport default Login;","import React from 'react';\n\nconst Aftersignin = (props) => {\n\tconst {\n\t\thandleLogout\n\t} = props;\n\n\treturn(\n\t\t<section className = \"hero\">\n\t\t\t<nav>\n\t\t\t\t<h2>Signedin successfully!</h2>\n\t\t\t\t<button onClick = {handleLogout}>Signout</button>\n\t\t\t</nav>\n\t\t</section>\n\t\t)\n}\n\nexport default Aftersignin;"," import firebase from 'firebase';\n\n var firebaseConfig = {\n    apiKey: \"AIzaSyB5Ovzt9W249DEOSwvcaTeYX8Cp4qAVTzU\",\n    authDomain: \"fir-authentication-129f3.firebaseapp.com\",\n    projectId: \"fir-authentication-129f3\",\n    storageBucket: \"fir-authentication-129f3.appspot.com\",\n    messagingSenderId: \"119310778354\",\n    appId: \"1:119310778354:web:c585646c1e4fac9170356b\"\n  };\n \n  const fire=firebase.initializeApp(firebaseConfig);\n\n  export default fire;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Login from './Login';\nimport Aftersignin from './Aftersignin';\nimport fire from './fire';\n \nconst App = () => {\n  const [user, setUser] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [hasAccount, setHasAccount] = useState(false);\n\n  const clearInputs = () =>{\n    setEmail('');\n    setPassword('');\n  }\n\n  const clearErrors = () =>{\n    setEmailError('');\n    setPasswordError('');\n  }\n\n  const handleLogin = () =>{\n    clearErrors();\n    fire\n      .auth()\n      .signInWithEmailAndPassword(email,password)\n      .catch((err) => {\n        switch (err.code) {\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            setEmailError(err.message);\n            break;\n          case \"auth/wrong-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n\n  };\n\n  const handleSignup = () =>{\n    clearErrors();\n    fire\n      .auth()\n      .createUserWithEmailAndPassword(email,password)\n      .catch((err)   => {\n        switch (err.code) {\n          case \"auth/email-already-in-use\":\n          case \"auth/invalid-email\":\n            setEmailError(err.message);\n            break;\n          case \"auth/weak-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n      \n  };\n\n  const handleLogout = () =>{\n    fire.auth().signOut();\n      \n  };\n\n  const authListener = () =>{\n    fire.auth().onAuthStateChanged((user) => {\n      if(user){\n        clearInputs();\n        setUser(user);\n      }else{\n        setUser(\"\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n\n  return (\n    <div className=\"App\">\n    {user ? (\n            <Aftersignin handleLogout = {handleLogout} />\n            ):\n          ( \n         <Login \n          email = {email}\n          setEmail = {setEmail} \n          password = {password} \n          setPassword = {setPassword}\n          handleLogin = {handleLogin} \n          handleSignup = {handleSignup} \n          hasAccount = {hasAccount} \n          setHasAccount = {setHasAccount} \n          emailError = {emailError} \n          passwordError = {passwordError}\n          />\n        )\n      }\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}